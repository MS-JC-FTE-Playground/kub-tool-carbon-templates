{{- $fullName := include "{{ .TemplateBuilder.Name }}.fullname" . -}}
{{- $env := required "Please specify an environment via helm: --set nodePoolAssignments.env=<env> Valid values are: dev, test, stage, or production." .Values.nodePoolAssignments.env -}}
{{- $key := required "Please specify a node pool key via helm: --set nodePoolAssignments.label.key=gaptech.com/user-nodepool" .Values.nodePoolAssignments.label.key -}}
{{ if .Values.argo.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
{{ else }}
apiVersion: apps/v1
kind: Deployment
{{ end }}
metadata:
  name: {{ $fullName }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "{{ .TemplateBuilder.Name }}.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
 {{ if .Values.argo.enabled }}
  strategy:
    canary:
      trafficRouting:
        istio:
          virtualService: 
            name: ivs-{{ $fullName }}
            routes:
            - canary-rollout
          destinationRule:
            name: dstr-{{ $fullName }}
            canarySubsetName: canary
            stableSubsetName: stable
      steps:
        # for initial step in support of canary-testing (via header) with NO public traffic yet because of scale without weight
        - setCanaryScale:
            replicas: 1 # a team may set this higher if smoke tests during canary-testing do any checks where load needs more than 1
        - pause: {} # canary testing for promote vs rollback should happen here
        # If all canary-testing passed then we can proceed with remaining steps based on percentages
        - setCanaryScale:
            weight: 25 # set initial canary traffic weight
            matchTrafficWeight: true # returns to the default behavior of matching the canary traffic weight
        - pause: { duration: 30s }
        - setCanaryScale:
            weight: 50 # increase weighting of canary traffic weight
        - pause: { duration: 30s }
        - setCanaryScale:
            weight: 75 # increase weighting of canary traffic weight
        - pause: { duration: 30s }
        # Argo Rollouts will now take this to 100%
  {{ else }}
  {{ with .Values.strategy }}
  strategy:
  {{- toYaml . | nindent 4 }}
  {{ end }}
  {{ end }}  
  selector:
    matchLabels:
      {{- include "{{ .TemplateBuilder.Name }}.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      name: {{ .TemplateBuilder.Name }}    
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "{{ .TemplateBuilder.Name }}.selectorLabels" . | nindent 8 }}
        {{- $identity := printf "%s-%s" "aib" $fullName  -}}
        {{ if .Values.aadPodIdentity.enabled  }}
        aadpodidbinding: {{ .Values.aadPodIdentity.identity | default $identity }}
        {{ end }}        
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{ if .Values.serviceAccount.create }}
      serviceAccountName: "sa-{{ include "{{ .TemplateBuilder.Name }}.serviceAccountName" . }}"
      {{ end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        envFrom:
          {{- toYaml .Values.containers.envFrom | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.repositories.app }}/{{ .Values.image.namespace }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.containers.ports }}
        ports:
          {{- toYaml . | nindent 10 }}
        {{ end }}
        {{ if .Values.containers.healthEndpoints.enabled }}
        {{- with .Values.containers.healthEndpoints.livenessProbe }}
        livenessProbe:
          {{- toYaml . | nindent 10 }}
        {{ end }}
        {{- with .Values.containers.healthEndpoints.readinessProbe }}
        readinessProbe:
          {{- toYaml . | nindent 10 }}
          {{ end }}
        {{ end }}        
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{ if .Values.csiSecretsProvider.enabled }}   
        env:
        {{ range .Values.csiSecretsProvider.environmentVariables }}
        - name: {{ . }}
          valueFrom:
            secretKeyRef:
              name: sec-{{ $fullName}}
              key: {{ lower . | replace "_" "" | replace "-" "" }}
        {{ end }}         
        {{ range .Values.csiSecretsProvider.sharedEnvironmentVariables }}
        - name: {{ . }}
          valueFrom:
            secretKeyRef:
              name: sec-shared-{{ $fullName}}
              key: {{ lower . | replace "_" "" | replace "-" "" }}
        {{ end }}         
        volumeMounts:
        {{ if .Values.csiSecretsProvider.environmentVariables }}
          - name: "{{ $fullName}}-csi-vol"
            mountPath: "/mnt/secrets-store"
            readOnly: true
        {{ end }}
        {{ if .Values.csiSecretsProvider.sharedEnvironmentVariables }}
          - name: "shared-{{ $fullName}}-csi-vol"
            mountPath: "/mnt/shared-secrets-store"
            readOnly: true
        {{ end }}
        {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
      {{ if .Values.affinity }}
        {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
        {{ end }}
      {{ else }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: gaptech.com/environment-{{ $env }}
                operator: Exists
              {{ if .Values.nodePoolAssignments.label.value }}
              - key: {{ $key }}
                operator: In
                values:
                - {{ .Values.nodePoolAssignments.label.value }}
              {{ else }}
              - key: {{ $key }}
                operator: Exists
              {{ end }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{ if .Values.csiSecretsProvider.enabled }}
      volumes:      
      {{ if .Values.csiSecretsProvider.environmentVariables }}
        {{ $spc := printf "%s-%s" "spc" $fullName }}
        - name: "{{ $fullName }}-csi-vol"
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ .Values.csiSecretsProvider.secretProviderClass | default $spc }}
      {{ end }}
      {{ if .Values.csiSecretsProvider.sharedEnvironmentVariables }}
        {{ $sspc := printf "%s-%s-%s" "spc" "shared" $fullName }}
        - name: "shared-{{ $fullName }}-csi-vol"
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ .Values.csiSecretsProvider.secretProviderClass | default $sspc }}
      {{ end }}
      {{ end }}
